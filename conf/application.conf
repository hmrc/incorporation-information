# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~
include "backend.conf"
appName=incorporation-information


# Play Modules
# ~~~~
# Additional play modules can be added here



play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

play.modules.enabled += "config.Module"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"


# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.

# Router
# ~~~~~
play.http.router=prod.Routes

use-https-fire-subs=false
pekko.quartz {
  threadPool {
    threadCount = 1
    threadPriority = 5
    daemonThreads = true
  }
  defaultTimezone = UTC
}

startUpJob {
  initialDelayMillis = 0
}

schedules.fire-subs-job {
  enabled          = false
  description     = "fire subscriptions job"
  expression      = "0/10_0-59_0-23_?_*_*_*"  # run every 10 seconds between the hours of 0-23
  lockTimeout     = 600
}
schedules.incorp-update-job {
  enabled          = false
  description     = "incorp update job"
  expression      = "0/10_0-59_0-23_?_*_*_*"  # run every 10 seconds between the hours of 0-23
  lockTimeout     = 600
}
schedules.metrics-job {
  enabled          = false
  description     = "metrics job"
  expression      = "0_0/1_0-23_?_*_*_*"  # run every 60 seconds between the hours of 0-23
  lockTimeout     = 600
}

schedules.proactive-monitoring-job {
  enabled          = false
  description     = "proactive monitoring job"
  expression      = "0_0/1_0-23_?_*_*_*"  # run every 60 seconds between the hours of 0-23
  lockTimeout     = 600
}

  # Controller
  # ~~~~~
  # By default all controllers will have authorisation, logging and
  # auditing (transaction monitoring) enabled.
  # The below controllers are the default exceptions to this rule.

  controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    controllers.TransactionalController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }

    controllers.SubscriptionController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }

    controllers.test.FeatureSwitchController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }

    controllers.test.ManualTriggerController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }

    controllers.test.CallbackTestEndpointController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }

    controllers.test.IncorpUpdateController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }
  }

  # retry mechanism in http-verbs handles "SSLEngine closed already" exceptions
  http-verbs.retries.ssl-engine-closed-already.enabled = true

  # Logger
  # ~~~~~
  # You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

  # Root logger:
  logger.root=ERROR

  # Logger used by the framework:
  logger.play=INFO

  # Logger provided to your application:
  logger.application=DEBUG

  # Metrics plugin settings - graphite reporting is configured on a per env basis
  metrics {
    enabled = true
  }

  # Microservice specific config

  auditing {
    enabled=true
  }

  mongodb {
    uri = "mongodb://localhost:27017/incorporation-information"
  }

  config {
    version = "Dev-application.conf-N/A"
  }

  http-verbs.proxy.enabled = false
  proxy {
    username = username
    password = password
    protocol = http
    host = localhost
    port = 3128
  }

  microservice {

    services {

      forced-submission-delay-minutes = 5
      rai-alert-logging-day = "MON,TUE,WED,THU,FRI"
      rai-alert-logging-time = "08:00:00_17:00:00"

      transaction-id-to-poll = "dGVzdA=="
      crn-to-poll = "dGVzdA=="

      incorp-update-api {
        url = "https://ewfgonzo.companieshouse.gov.uk"
        stub-url = "http://localhost:9986/incorporation-frontend-stubs"
        token = "foo"
        itemsToFetch = 1
      }
      fire-subs-job {
        queueFailureDelaySeconds = 600
        queueRetryDelaySeconds = 300
      }
      public-coho-api {
        baseUrl = "https://api.companieshouse.gov.uk"
        stub-url = "http://localhost:9986/incorporation-frontend-stubs"
        authToken = "test"
        authTokenNonSCRS = "NON-SCRS"
      }

      scrs-services = "ZXhhbXBsZS1zZXJ2aWNlLHRlc3QtbmFtZQ=="
    }
  }

mongo-async-driver {
  pekko {
    log-dead-letters-during-shutdown = off
    log-dead-letters = 0
  }
}